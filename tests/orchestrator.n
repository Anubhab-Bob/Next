import toplevel
import helloworld
import fncall

import arraytest
import classtest
import exceptiontest
import iftest
import importest
import opmethod
import prepost
import primitivetest
import rerrtest
import subscriptest
import typetest
import truthness
import hashmap
import fortest
import iterator
import rangetest
import formattest

modules = {prepost: "Pre and post increment/decrements",
        iftest: "Short circuits",
        primitivetest: "Primitive method calls",
        classtest: "Classes",
        importest: "Imports",
        opmethod: "Operator methods",
        subscriptest: "Subscript getter and setter",
        arraytest: "Arrays",
        exceptiontest: "Exceptions",
        rerrtest: "Runtime exceptions",
        typetest: "Type builtins",
        truthness: "Truthness evaluation",
        hashmap: "Hashmaps",
        fortest: "For loops",
        iterator: "Iterators",
        rangetest: "Ranges",
        formattest: "String formatting"}

// find the maximum length
len = 0
for(v in modules.values()) {
    if(v.len() > len) {
        len = v.len()
    }
}

print(fmt("{0:^{1}}\t\t{2:^12}\n", "Test", len, "Status"))
print(fmt("{0:-^{1}}\t\t{0:-^12}\n", "-", len))

for(k in modules.keys()) {
    print(fmt("{0:^{1}}\t\t", modules[k], len))
    res = k.test()
    resstr = ""
    if(res) {
        resstr = "Passed"
    } else {
        resstr = "Failed"
    }
    print(fmt("{:^12}\n", resstr))
}
