fn mayBeCalled(shouldBeCalled, returnValue) {
    if(!shouldBeCalled) {
        print("[Error] This function should not be called! Short circuit is not working!\n")
    }
    ret returnValue
}

pub fn test() {
    res = true
    a = mayBeCalled(true, true) or mayBeCalled(false, true)
    a = mayBeCalled(true, false) or mayBeCalled(true, true)
    if(a == false) {
        print("[Error] OR is broken!\n")
        res = false
    }
    a = mayBeCalled(true, false) and mayBeCalled(false, true)
    a = mayBeCalled(true, true) and mayBeCalled(true, false)
    if(a == true) {
        print("[Error] AND is broken!\n")
        res = false
    }

    ret res
}
