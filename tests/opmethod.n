import core

class List {
    priv:
        mem
    pub:
        new(a, b) {
            mem = a * b
        }

        op +(x) {
            mem = mem + x
            ret mem
        }

        op -(x) {
            mem = mem - x
            ret mem
        }

        op *(x) {
            mem = mem * x
            ret mem
        }

        op /(x) {
            mem = mem / x
            ret mem
        }

        op >(x) {
            ret mem > x
        }

        op >=(x) {
            ret mem >= x
        }

        op <(x) {
            ret mem < x
        }

        op <=(x) {
            ret mem <= x
        }
        /* AND and OR opmethods are not yet implemented
        op or(x) {
            ret mem > 0 or x > 0
        }

        op and(x) {
            ret mem > 0 and x > 0
        }
        */
        op ==(x) {
            ret mem == x
        }

        op !=(x) {
            ret mem != x
        }

        fn getMem() {
            ret mem
        }
}

pub fn test() {
    res = true
    obj = List(2, 3)
    if(obj.getMem() != 6) {
        print("Constructors aren't working!\n")
        res = false
    }
    something = obj + 4
    if(something != 10) {
        print("+(_) is not working\n")
        res = false
    }
    something = obj - 1
    if(something != 9) {
        print("-(_) is not working\n")
        res = false
    }
    something = obj * 4
    if(something != 36) {
        print("*(_) is not working\n")
        res = false
    }
    something = obj / 2
    if(something != 18) {
        print("/(_) is not working\n")
        res = false
    }
    something = obj > 4
    if(!something) {
        print(">(_) is not working\n")
        res = false
    }
    something = obj < 4
    if(something) {
        print("<(_) is not working\n")
        res = false
    }
    something = obj <= 18
    if(!something) {
        print("<=(_) is not working\n")
        res = false
    }
    something = obj >= 19
    if(something) {
        print(">=(_) is not working\n")
        res = false
    }
    /* AND and OR op methods are not yet implemented
    something = obj or 4
    if(!something) {
        print("or(_) is not working\n")
        res = false
    }
    something = obj and -8
    if(something) {
        print("and(_) is not working\n")
        res = false
    }
    */
    something = obj == 19
    if(something) {
        print("==(_) is not working\n")
        res = false
    }
    something = obj != 18
    if(something) {
        print("!=(_) is not working")
        res = false
    }

    ret res
}
