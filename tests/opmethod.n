import core

class List {
    priv:
        mem
    pub:
        new(a, b) {
            mem = a * b
        }

        op +(x) {
            mem = mem + x
            ret mem
        }

        op -(x) {
            mem = mem - x
            ret mem
        }

        op *(x) {
            mem = mem * x
            ret mem
        }

        op /(x) {
            mem = mem / x
            ret mem
        }

        op >(x) {
            ret mem > x
        }

        op >=(x) {
            ret mem >= x
        }

        op <(x) {
            ret mem < x
        }

        op <=(x) {
            ret mem <= x
        }

        op or(x) {
            ret mem > 0 or x > 0
        }

        op and(x) {
            ret mem > 0 and x > 0
        }

        op ==(x) {
            ret mem == x
        }

        op !=(x) {
            ret mem != x
        }

        fn getMem() {
            ret mem
        }
}

obj = List(2, 3)
if(obj.getMem() != 6) {
    throw core.RuntimeException("Constructors aren't working!")
}
something = obj + 4
if(something != 10) {
    throw core.RuntimeException("+(_) is not working!")
}
something = obj - 1
if(something != 9) {
    throw core.RuntimeException("-(_) is not working!")
}
something = obj * 4
if(something != 36) {
    throw core.RuntimeException("*(_) is not working!")
}
something = obj / 2
if(something != 18) {
    throw core.RuntimeException("/(_) is not working!")
}
something = obj > 4
if(!something) {
    throw core.RuntimeException(">(_) is not working!")
}
something = obj < 4
if(something) {
    throw core.RuntimeException("<(_) is not working!")
}
something = obj <= 18
if(!something) {
    throw core.RuntimeException("<=(_) is not working!")
}
something = obj >= 19
if(something) {
    throw core.RuntimeException(">=(_) is not working!")
}
something = obj or 4
if(!something) {
    throw core.RuntimeException("or(_) is not working!")
}
something = obj and -8
if(something) {
    throw core.RuntimeException("and(_) is not working!")
}
something = obj == 19
if(something) {
    throw core.RuntimeException("==(_) is not working!")
}
something = obj != 18
if(something) {
    throw core.RuntimeException("!=(_) is not working")
}
print("Everything is working fine!")
