pub fn test() {
    res = true
    v = true
    if(v.str() != "true") {
        print("[Error] bool.str() is broken!\n")
        res = false
    }
    
    d = 2.8284382828899812898938298
    if(d.str() != "2.828438") {
        print("[Error] number.str() is broken!\n")
        res = false
    }
    a = 2.32
    if(a.is_int()) {
        print("[Error] number.is_int() is broken!\n")
        res = false
    }
    a = 2
    if(!a.is_int()) {
        print("[Error] number.is_int() is broken\n")
        res = false
    }

    s = "Hello World!"
    if(s.str() != "Hello World!") {
        print("[Error] string.str() is broken!\n")
        res = false
    }
    if(s.len() != 12) {
        print("[Error] string.len() is broken!\n")
        res = false
    }
    
    try {
        s.badPrimitive(d)
        print("[Error] string.badPrimitve() should've resulted in an exception!\n")
        res = false
    } catch(RuntimeException e) {}

    try {
        if(s.has(123)) {
            print("[Error] string.has(123) should not return true!\n")
            res = false
        }
        print("[Error] string.has() should not accept 123 as a valid argument!\n")
        res = false
    } catch(RuntimeException e) {}

    if(!s.has("Hello") or !s.has("lo Wo") or s.has("Hola")) {
        print("[Error] string.has() is broken!\n")
        res = false
    }

    ret res
}
